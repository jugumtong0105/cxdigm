@use "sass:math";
@use "sass:selector";
@use "sass:string";
@use "functions" as *;
@use "_mixin_media" as *;
//
// gradation  : gradation 
// date       : 2020.07.27
/// @param {color} $colorBg  : bg1
/// @param {color} $colorBg2 : bg2
// 
@mixin gradation($colorBg, $colorBg2, $deg : 45deg) {
  background: $colorBg; /* Old browsers */
  background: -moz-linear-gradient($deg,  $colorBg 0%, $colorBg 30%, $colorBg2 70%, $colorBg2 100%); /* FF3.6-15 */
  background: -webkit-linear-gradient($deg,  $colorBg 0%,$colorBg 30%,$colorBg2 70%,$colorBg2 100%); /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient($deg,  $colorBg 0%,$colorBg 30%,$colorBg2 70%,$colorBg2 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=#{$colorBg}, endColorstr=#{$colorBg2},GradientType=1 ); /* IE6-9 fallback on horizontal gradient */
  /* IE6-9 */
  transition: none;
}

@mixin gradation2($colorBg, $colorBg2, $deg : 45deg) {
  background: $colorBg; /* Old browsers */
  background: -moz-linear-gradient($deg,  $colorBg 0%, $colorBg 20%, $colorBg2 80%, $colorBg2 100%); /* FF3.6-15 */
  background: -webkit-linear-gradient($deg,  $colorBg 0%,$colorBg 20%,$colorBg2 80%,$colorBg2 100%); /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient($deg,  $colorBg 0%,$colorBg 20%,$colorBg2 80%,$colorBg2 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=#{$colorBg}, endColorstr=#{$colorBg2},GradientType=1 ); /* IE6-9 fallback on horizontal gradient */
  /* IE6-9 */
  transition: none;
}


//
// clearfix        : clearfix mixin 
// date            : 2020.07.27
//
/// @param {string} $type          
/// 
@mixin clearfix($type : null) {
  @if $type == null {
    overflow: hidden;
  }
  @else if $type == "after"{
    &::after {
        display: block;
        content: "";
        clear: both;
    }
  }
}

//
// ps-center       : ps-center mixin (transform)
// date            : 2020.07.27
///
/// @param {string} $type       :
///
@mixin ps-center($type : null) {
  position: absolute;
  @if $type == null {
    width: 100%;
    top: 50%; left: 50%;
    @include vendor(transform,translate(-50%, -50%));
  }
  @else if $type == "middle" {
    top: 50%;
    @include vendor(transform,translate(0, -50%));
  }
  @else if $type == "center" {
    left: 50%;
    @include vendor(transform,translate( -50%, 0));
  }
}

@mixin  margin-auto {
    margin: {
      left: auto;
      right:auto;
  }; 
}

@mixin background-img($url : null) {
  @if($url != null){
    background-image: url($url);
  }
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
}

@mixin img-box($pt) {
  display: block;
  position: relative;
  overflow: hidden;
  background-color: #f7f7f7;
  &::before{
    content:'';
    display: block;
    padding-top: $pt;
  }
  img{
    display: block;
    @include ps-center();
    width: auto;
    min-width: 100%;
    max-width: 120%;
    height: auto;
  }
}


//
@mixin  after-line-box ($color){
  position: relative;
  &::after{
    content:'';
    display: block;
    position: absolute;
    background:$color;
    height: 1px;
    width: 0;
    bottom: 0;
    left:50%;
    @include vendor (transition, 'all .3s');
  }
  &:hover::after, &:focus::after{
    width: 100%;
    left:0;
  }
}

@mixin  flex ($wrap : null) {
  width: 100%;
  
  display:-webkit-box;
  display:-ms-flexbox;
  display:flex;

  //기본 row
  -webkit-box-orient:horizontal;
  -ms-flex-direction:row;
  flex-direction:row;
  @if($wrap == 'nowrap'){
    -webkit-box-lines:single;
    -ms-flex-wrap:nowrap;
    flex-wrap:nowrap;
  }
  @else{
    -ms-flex-wrap:wap;
    flex-wrap:wrap;
  }
}

@mixin unify-parent($child) {
  @at-root #{selector.unify(&, $child)} {
    @content;
  }
}


@mixin wrap-padding($name, $num : 0, $child : '*') {
  @if $num > 0{
    #{$name}wp_#{$num}{
     // @include mob-not {
        margin-left: rem($num * -1);
        margin-top : rem($num * -1);
        > #{$child}{
          margin-top: rem($num + 1);
          margin-left: rem($num + 1);
        }
      //}
      //@include mob {
      //  margin-left: rem(math.div($num, 2) * -1);
      //  margin-top : rem(math.div($num, 2) * -1);
      //  > #{$child}{
      //    margin-top: rem(math.div($num, 2));
      //    margin-left: rem(math.div($num, 2));
      //  }
      //} 
      @content;
    }
  }
}


@mixin wrap-padding2($name, $num : 0, $child : '*') {
  @if $num > 0{
    #{$name}wp_#{$num}{
     // @include mob-not {
        margin : rem(math.div($num, 2) * -1);
        > #{$child}{
          margin: rem(math.div($num, 2));
        }
      @content;
    }
  }
}

@mixin wrap-padding2-mo($name, $num : 0, $child : '*') {
  @if $num > 0{
    #{$name}wp_#{$num}{
     // @include mob-not {
        margin : rem(math.div($num, 4)  * -1);
        > #{$child}{
          margin: rem(math.div($num, 4));
        }
      @content;
    }
  }
}

@mixin wrap($wrap, $p : 20) {
  padding : {
    left: rem($p);
    right: rem($p);
  }
  margin: {
    left : auto;
    right : auto;
  };
  max-width: rem($wrap + $p * 2);
}


@mixin ellip( $line, $lh, $fs : 16, $maxH : null){
  @if $line == 1 {
      display: block;
      height: em($lh, $fs);
      line-height:  em($lh, $fs);
      overflow: hidden;
      width:100%;
      white-space: nowrap;
      text-overflow: ellipsis;
  }@else{
      display: block;
      display:-webkit-box !important;
      word-wrap:break-word;
      -webkit-box-orient:vertical;
      text-overflow:ellipsis;
      overflow: hidden;

      -webkit-line-clamp:$line;
      max-height: em($lh * $line, $fs);
      line-height:  em($lh, $fs);
  }

  @if $maxH != null  {
    height:  em($lh * $line, $fs);
  }
}
@mixin table-layout($left-name, $right-name){
  &{
      width: 100%;
      display: table;
      table-layout: fixed;
  }
  &#{$left-name}, 
  &#{$right-name}{
      vertical-align: top;
      display: table-cell;
  }
}

@mixin img-box ($w, $h){
  &{
      position: relative;
      overflow: hidden;
      &::before{
          content:'';
          display: block;
          padding-top: math.div($h, $w) * 100%;
      }
  }
  > a{
      position: absolute;
      min-width: 100%;
      max-width: none;
      width:auto;
      top:-1px;
      bottom:-1px;
      left:-1px;
      right:-1px;
      display: block;
  }
  img{
      display: block;
      position: absolute;
      width: 100%;
      transform: translate(-50%, -50%);
      top: 50%;
      left: 50%;
  }
}


@mixin scroll-style {
  @at-root html:not(.mobile) &{
    &::-webkit-scrollbar {
      width: 5px;
    }
    &::-webkit-scrollbar-thumb {
      background-color: rgba(0, 0, 0, 0);
      border-radius: rem(100);
    }
  }
}

@mixin icon{
   /* use !important to prevent issues with browser extensions that change fonts */
   font-family: 'icomoon' !important;
   speak: never;
   font-style: normal;
   font-weight: normal;
   font-variant: normal;
   text-transform: none;
   line-height: 1;
 
   /* Better Font Rendering =========== */
   -webkit-font-smoothing: antialiased;
   -moz-osx-font-smoothing: grayscale;
}

@mixin noData{
  .noData{
    border-bottom: 1px solid var(--gray-333);
    padding: rem(260) 0;
    text-align: center;
    width: 100% !important;
    flex-basis: 100%;
    line-height: 1.56;
    color: var(--scroll-bar-color);
    font-size: rem(20);
    &::before{
      @include icon();
      content:'\e910';
      font-size: rem(56);
      margin-bottom: rem(15);
    }
    @include tab-small{
      padding: rem(200) 0 rem(194);
      flex-basis: 100%;
      font-size: rem(30);
      &::before{
        margin-bottom: rem(22);
      }
    }
  }
}


@mixin pc-hover{
  @at-root html:not(.mobile) &{
    @content;
  }
}

@mixin txt-hidden {
  height: 0;
  line-height: 0;
  overflow: hidden;
  font-size: 0;
}

@mixin txtStrok {
  color: var(--black);
  -webkit-text-stroke: 2px rgba($color: #ffffff, $alpha: 0.5);
}

@mixin txtStrok-mo-sm {
  color: var(--black);
  -webkit-text-stroke: 1px rgba($color: #ffffff, $alpha: 0.5);
}

